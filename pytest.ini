[tool:pytest]
# Test discovery and execution
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --cov=backend
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80
    --cov-branch
    --durations=10

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    api: API endpoint tests
    auth: Authentication and authorization tests
    database: Database model and operation tests
    ai: AI/ML model tests
    performance: Performance and load tests
    security: Security and vulnerability tests
    e2e: End-to-end workflow tests
    slow: Tests that take longer to execute
    offline: Tests for offline functionality
    ui: User interface tests

# Test filtering
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning

# Coverage configuration
[coverage:run]
source = backend
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */alembic/*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# Test data and fixtures
[tool:pytest.ini_options]
asyncio_mode = auto
cache_dir = .pytest_cache
minversion = 6.0
